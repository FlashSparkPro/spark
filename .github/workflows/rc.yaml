name: "Release Candidate"

on:
  pull_request:
    paths:
      - ".github/workflows/rc.yaml"
  workflow_dispatch: {}
  schedule:
    - cron: "0 * * * *"

jobs:
  loadtest:
    runs-on: "self-hosted"
    permissions:
      id-token: write
      contents: read
    env:
      KUBECONFIG: "/tmp/${{ github.run_id }}.kubeconfig"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - name: "Configure AWS credentials"
        uses: "aws-actions/configure-aws-credentials@v4"
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_DEV }}:role/github-actions-spark"
          aws-region: "us-west-2"
      - name: "Configure Kubernetes cluster"
        run: "aws --region us-west-2 eks update-kubeconfig --name loadtest"

      - name: "Restart pods"
        run: "kubectl -n spark rollout restart sts/spark"
      - name: "Check pod status"
        run: |
          for i in `seq 12`; do
            sleep 10s
            date
            kubectl -n spark get pods -l 'app.kubernetes.io/name=spark' -o jsonpath='{range .items[*]}{.metadata.name} {.status.phase} {.status.conditions[?(@.type=="Ready")].status}{ "\n"}{end}' | grep -v 'spark-db-backup' | grep -v ' Running True$' | tee /tmp/status
            if [ ! -s /tmp/status ]; then break; fi
          done
          if [ -s /tmp/status ]; then exit 1; fi

      - name: "Notify failure on Slack"
        if: "${{ failure() && github.event_name == 'schedule' }}"
        run: |
          curl --data-binary @- --header "Content-Type: application/json" --silent "${{ secrets.SLACK_WEBHOOK_ALERTS }}" <<EOF
          {
            "text": ":x: ${{ github.workflow }} workflow by ${{ github.actor }} <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id}}|failed> in ${{ github.job }} on <${{ github.server_url }}/${{ github.repository }}/commit/$GITHUB_SHA|${{ github.ref_name }}>"
          }
          EOF
